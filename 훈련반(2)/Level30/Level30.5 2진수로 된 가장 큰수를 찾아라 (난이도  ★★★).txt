#include <iostream>
#include <cstring>
using namespace std;
string str[3];
string temp[3];
int t = 0;
int maxLen() {
	int maxlen = 0;
	for (int i = 0; i < 3; i++) {
		if (str[i].size() > maxlen) maxlen = str[i].size();
	}
	for (int i = 0; i < 3; i++) {
		if (str[i].size() == maxlen) {
			temp[t++] = str[i];
		}
	}
	return maxlen;
}

int main () {

	cin >> str[0] >> str[1] >> str[2];
	int n = maxLen();
	
	//1단계: 첫 0의 Index가 같은 거 모으기
	int a = 0, maxidx = 0;
	string temp2[10];
	for (int i = 0; i < t; i++) {
		a = temp[i].find('0');
		if (a > maxidx) {
			maxidx = a;
		}
	}
	int b = 0, c = 0;
	for (int i = 0; i < t; i++) {
		b = temp[i].find('0');
		if (b == maxidx) {
			temp2[c++] = temp[i];
		}
	}

	//2단계: 첫 0의 Index가 같은 것끼리 최댓값 돌리기
	int index = 0;
	string maxString;
	for (int x = 0; x < n; x++) {
		for (int i = 0; i < c; i++) {
			if (temp2[i][x] == '1') maxString = temp2[i];
		}
	}



	cout << maxString;

	return 0;
}
--------------------------------------------------------
선생님 풀이
#include<iostream>
#include<cstring>
using namespace std;

int isBigger(char v1[50], char v2[50])
{
	int n1 = strlen(v1);
	int n2 = strlen(v2);

	if (n1 > n2) return 1;
	if (n1 < n2) return 0;

	//만약 두 글자수가 같다면 한글자씩 비교
	for (int i = 0; i < n1; i++) {
		if (v1[i] != v2[i]) {

			if (v1[i] == '1') return 1; //v1이 더 큰수
			return 0;
		}
	}
	return -1;
}

int main() {

	char vect[3][50];
	
	for (int i = 0; i < 3; i++) {
		cin >> vect[i];
	}

	int a = isBigger(vect[0], vect[1]);
	int b = isBigger(vect[0], vect[2]);
	int c = isBigger(vect[1], vect[2]);

	if (a == 1 && b == 1) { //0이 가장 크면
		cout << vect[0];
	}
	else if (a == 0 && c == 1) { //1이 가장 크면
		cout << vect[1];
	}
	else {
		cout << vect[2];
	}	

	return 0;
}