#include <iostream>
#include <cstring>;
#include <vector>
using namespace std;
int vect[4][4];
int direct[4][2] = {
	1,0,
	-1,0,
	0,1,
	0,-1,
};
int isSafe(int dy, int dx) {

	for (int i = 0; i < 4; i++) {
		int ny = dy + direct[i][0];
		int nx = dy + direct[i][1];
		if (nx < 0 || nx >3 || ny < 0 || ny>3) continue;
		if (vect[ny][nx] == 1) return 0;
	}
	return 1;


}

int main() {

	for (int y = 0; y < 4; y++) {
		for (int x = 0; x < 4; x++) {
			cin >> vect[y][x];
		}
	}

	int n;
	for (int y = 0; y < 4; y++) {
		for (int x = 0; x < 4; x++) {
			n = isSafe(y, x);
			if (n == 0) {
				cout << "위험한 상태";
				break;
			}
		}
		if (n == 0) break;
	}

	if (n == 1) cout << "안전한 상태";

	return 0;
}
---------------------------------------------------------------------
선생님 풀이
#include<iostream>
using namespace std;
int main() {
	int arr[4][4];
	int dir[4][2] = {
		-1,0,
		1,0,
		0,-1,
		0,1
	};
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			cin >> arr[i][j];
		}
	}
	bool safe = true;
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			if (arr[i][j] == 1) {
				for (int k = 0; k < 4; k++) {
					int dx = i + dir[k][0];
					int dy = j + dir[k][1];
					if (dx >= 0 && dx < 4 && dy >= 0 && dy < 4) {
						if (arr[dx][dy] == 1) {
							safe = false;
							break;
						}
					}
				}
			}
		}
	}
	if (safe)
		cout << "안전한 상태";
	else
		cout << "위험한 상태";
	return 0;
}