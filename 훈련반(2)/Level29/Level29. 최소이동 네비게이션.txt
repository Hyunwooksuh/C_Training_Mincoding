#include <iostream>
#include <string>
#include <vector>
using namespace std;
vector<vector<int>> alist(6);
int vect[6] = { 3,5,4,1,2,6 };
              //0 1 2 3 4 5
int sum = 0;
int a, b, c, d;
int arr[10] = { 0 }, t = 0;
int used[10] = { 0 };
void run(int now, int sum) {

	if (now == d) {
		arr[t++] = sum;
		return;
	}

	for (int i = 0; i < alist[now].size(); i++) {
		int next = alist[now][i];
		if (used[next] == 1) continue;
		used[next]++;
		run(next, sum++);
		used[next] = 0;
	}

}

int main() {


	cin >> a >> b;
	for (int i = 0; i < 6; i++) {
		if (vect[i] == a) c = i;
		else if (vect[i] == b) d = i;
	}
	alist[0].push_back(1);
	alist[1].push_back(3);
	alist[2].push_back(3);
	alist[3].push_back(0);
	alist[3].push_back(1);
	alist[3].push_back(5);
	alist[4].push_back(2);
	alist[4].push_back(3);

	run(c, sum);
	int min = arr[0];
	for (int i = 0; i < t; i++) {
		if (arr[i] < min) {
			min = arr[i];
		}
	}
	cout << min;
	


	return 0;
}
------------------------------------------------------------
선생님 풀이
#include <iostream>
using namespace std;

int map[6][6] = {
	0, 0, 1, 0, 1, 1,
	1, 0, 0, 1, 0, 0,
	0, 0, 0, 0, 1, 0,
	1, 0, 0, 0, 0, 0,
	1, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0,
};

int a, b;
int used[10];
int mini = 21e8;

void dfs(int level, int now) {
	if (now == b) {
		if (mini > level) mini = level;
		return;
	}

	for (int i = 0; i < 6; i++) {
		if (map[now][i] == 0) continue;
		if (used[i] == 1) continue;
		used[i] = 1;
		dfs(level + 1, i);
		used[i] = 0;
	}
}

int main()
{
	cin >> a >> b;
	a--;
	b--;

	used[a] = 1;
	dfs(0, a);

	if (mini == 21e8) mini = 0;
	cout << mini;

	return 0;
}