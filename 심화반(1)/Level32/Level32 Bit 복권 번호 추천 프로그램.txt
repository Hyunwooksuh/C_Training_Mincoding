#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;
int bucket[10] = { 0 };
int compare(int t1, int t2, int max) {
            //tt[x-1] tt[x]
    if (bucket[t1] == max) return 1;
    if (bucket[t2] == max) return 0;

    if (t1 < t2) return 1;
    if (t1 > t2) return 0;

    return 1;

}
int main()
{
    int vect[10][10] = { 0 };
    int mask[10][10] = { 0 };
    int result[20] = { 0 };
    int n;
    cin >> n;
    for (int y = 0; y < n; y++) {
        for (int x = 0; x < n; x++) {
            cin >> vect[y][x];
        }
    }
    for (int y = 0; y < n; y++) {
        for (int x = 0; x < n; x++) {
            cin >> mask[y][x];
        }
    }

    //1. 추출해서 result 배열에 넣기
    int t = 0;
    for (int y = 0; y < n; y++) {
        for (int x = 0; x < n; x++) {
            if (mask[y][x] == 1) result[t++] = vect[y][x];
        }
    }

    //2. 우선순위 : max 값
    int max = 0;
    for (int i = 0; i < t; i++) {
        bucket[result[i]]++;
    }
    for (int i = 0; i < 10; i++) {
        if (bucket[i] > 0) {
            if (bucket[i] > max) {
                max = bucket[i];
            }
        }
    }

    //1 1 2 2 3 3 6 6 6 7 7 7 8 8 8 
    int tt[100] = { 0 };
    for (int i = 0; i < t; i++) {
        tt[i] = result[i];
        for (int x = i; x > 0; x--) {
            int n = compare(tt[x - 1], tt[x], max);
            if (n == 0) swap(tt[x - 1], tt[x]);
        }
    }
    for (int i = 0; i < t; i++) {
        cout << tt[i] << " ";
    }
    return 0;
}

------------------------------------------------------------------------
선생님 풀이
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int map[11][11];
int n;

vector<int> rSelect;
int sn;
int sDat[10];

void init() 
{
	cin >> n;
	for (int y = 0; y < n; y++) {
		for (int x = 0; x < n; x++) {
			cin >> map[y][x];
		}
	}

	int bit;
	for (int y = 0; y < n; y++) {
		for (int x = 0; x < n; x++) {
			cin >> bit;

			if (bit == 1) {
				rSelect.push_back(map[y][x]);				
				sDat[map[y][x]]++; //dat 처리
			}
		}
	}

	sn = rSelect.size();
}

bool compare(int a, int b)
{
	if (sDat[a] > sDat[b]) return true;
	if (sDat[a] < sDat[b]) return false;
	return a < b;
}

int main()
{
	init();

	sort(rSelect.begin(), rSelect.end(), compare);

	for (int i = 0; i < sn; i++) {
		cout << rSelect[i] << " ";
	}

	return 0;
}