#include <iostream>
#include <string>
#include <queue>
#include <vector>
using namespace std;
int num[10];
int path[10];
int visited[10];
int cnt = 0;
void dfs(int level) {

	if (path[0] > 0 && path[0] < 3) return;

	if (level == 4) {
		int ret = path[0] * 1000 + path[1] * 100 + path[2] * 10 + path[3] * 1;
		if (ret > 3129) cnt++;
		return;
	}

	for (int i = 0; i < 4; i++) {
		if (visited[i] == 1) continue;
		visited[i] = 1;
		path[level] = num[i];
		dfs(level + 1);
		path[level] = 0;
		visited[i] = 0;
	}

}

int main()
{
	for (int i = 0; i < 4; i++) {
		cin >> num[i];
	}
	dfs(0);
	cout << cnt;

	return 0;
}

------------------------------------------------------------
선생님 풀이
#include <iostream>
using namespace std;

int vect[4] = { 2, 5, 1, 6 };
int cnt;
int used[4];

void run(int level, int sum) {
	if (level == 4) {
		if (sum > 3129) cnt++;
		return;
	}

	for (int i = 0; i < 4; i++) {
		if (level == 0 && vect[i] < 3) continue;
		if (used[i] == 1) continue;
		used[i] = 1;
		run(level + 1, sum * 10 + vect[i]);
		used[i] = 0;
	}
}

int main() {
	for (int i = 0; i < 4; i++) cin >> vect[i];

	run(0, 0);
	cout << cnt;
	return 0;
}