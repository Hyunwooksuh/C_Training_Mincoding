#include <iostream>
#include <vector>
#include <queue>
using namespace std;
int vect[3][3];
int maxi = -21e8;

priority_queue<int> q;
void back(int level, int startY, int startX, int gop) { 

	if (level == 3) {

		if (gop > maxi) {
			maxi = gop;
		}

		q.push(gop);
		return;
	}

	int aaas = startY;
	int bbbs = startX;
	for (int y = aaas; y < 3; y++) {
		for (int x = bbbs; x < 3; x++) {
			back(level + 1, y, x+1, gop * vect[y][x]);
		}
		bbbs = 0;
	}

}

int main()
{
	for (int y = 0; y < 3; y++) {
		for (int x = 0; x < 3; x++) {
			cin >> vect[y][x];
		}
	}
	back(0, 0, 0, 1);

	int cnt = 0;
	while (q.top() == maxi) {
		cnt++;
		q.pop();
	}
	cout << cnt;

	return 0;
}
------------------------------------------------------------
선생님 풀이 (그냥 maxCnt 썼으면 아주 쉽게 풀릴 문제였습니다...)
#include <iostream>
using namespace std;

int map[3][3];
int visit[3][3];
int maxGop;
int maxCnt;

void input()
{
	for (int y = 0; y < 3; y++) {
		for (int x = 0; x < 3; x++) {
			cin >> map[y][x];
		}
	}
}

void run(int level, int gop, int nowY, int nowX)
{
	if (level == 3) {
		if (gop == maxGop) {
			maxCnt++;
		}
		else if (gop > maxGop) {
			maxGop = gop;
			maxCnt = 1;
		}
		
		return;
	}

	int flag = 0;
	for (int y = 0; y < 3; y++) {
		for (int x = 0; x < 3; x++) {

			if (flag == 0) {
				flag = 1;
				y = nowY;
				x = nowX;
			}

			if (visit[y][x] == 1) continue;
			visit[y][x] = 1;
			run(level + 1, gop * map[y][x], y, x);
			visit[y][x] = 0;
		}
	}
}

int main()
{
	//freopen_s(new FILE*, "Text.txt", "r", stdin);
	input();
	run(0, 1, 0, 0);

	cout << maxCnt;
	return 0;
}