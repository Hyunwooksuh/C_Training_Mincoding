#include <iostream>
#include <algorithm>
#include <queue>
using namespace std;
struct Node {
	char item;
	int price;
};
vector<Node> arr = { {'a',15},{'b',20},{'c',44},{'d',22},{'e',55},{'f',16},{'g',45} };
vector<int> item;
int bucket[100];
string str;
int n;
int maxi = -21e8;
int used[10] = { 0 };
void dfs(int level, int sum) {

	if (level == item.size() - n) {
		if (sum % 10 == 0) {
			if (sum > maxi) maxi = sum;
		}
		return;
	}

	for (int i = 0; i < item.size(); i++) {
		if (used[i] == 1) continue;
		used[i] = 1;
		dfs(level + 1, sum + item[i]);
		used[i] = 0;
	}
}

int main () 
{
	cin >> str >> n;
	int t = 0;
	for (int i = 0; i < str.length(); i++) {
		for (int x = 0; x < 7; x++) {
			if (str[i] == arr[x].item) item.push_back(arr[x].price);
		}
	}
	dfs(0, 0);
	cout << maxi;
	return 0;
}

------------------------------------------------------------
선생님 풀이(price에 DAT를 등록해놓고, str에 해당하는 값으로 branch돌림)

#include <iostream>
#include <string>
using namespace std;

string str;
int selCnt;
int maxPrice;

int used[100];
int price[200];

void run(int level, int sum) {

	if (level == selCnt) {
		if (sum % 10 == 0 && maxPrice < sum) {
			maxPrice = sum;
		}
		return;
	}

	for (int i = 0; i < str.length(); i++) {
		if (used[i] == 1) continue;
		used[i] = 1;
		run(level + 1, sum + price[str[i]]);
		used[i] = 0;
	}
}

int main() {
	cin >> str;

	int removeCnt;
	cin >> removeCnt;

	selCnt = str.length() - removeCnt;

	//str 에서 selCnt를 선택했을 때 SUM이 10의 배수이면서 합이 MAX인 것을 찾아야함
	price['a'] = 15;
	price['b'] = 20;
	price['c'] = 44;
	price['d'] = 22;
	price['e'] = 55;
	price['f'] = 16;
	price['g'] = 45;

	run(0, 0);

	cout << maxPrice;

	return 0;
}