#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
char map[3][6] = {
	"30002",
	"##4##",
	"01024",
};
int used[3][5];
struct Node {
	int y, x;
	int level;
};
Node q[50];
Node start;
int head;
int tail;
int direct[4][2] = { -1,0,1,0,0,1,0,-1 };
int bfs(int sy, int sx, int tar) {

	memset(q, 0, sizeof(q));
	memset(used, 0, sizeof(used));
	head = 0;
	tail = 1;
	used[sy][sx] = 1;
	q[0] = { sy,sx,0 };
	
	while (head != tail) {
		Node now = q[head];

		if (map[now.y][now.x] == tar+48) {
			start.y = now.y;
			start.x = now.x;
			return now.level;
		}
		for (int i = 0; i < 4; i++) {
			int ny = now.y + direct[i][0];
			int nx = now.x + direct[i][1];
			if (ny < 0 || nx < 0 || ny >= 3 || nx >= 5) continue;
			if (map[ny][nx] == '#') continue;
			if (used[ny][nx] == 1) continue;
			used[ny][nx] = 1;
			q[tail++] = { ny, nx, now.level + 1 };
		}
		head++;
	}
	return -1;
}

int main() {

	for (int y = 0; y < 3; y++) {
		for (int x = 0; x < 5; x++) {
			cin >> map[y][x];
		}
	}

	int sum = 0;
	for (int i = 1; i <= 4; i++) {
		sum += bfs(start.y, start.x, i);
	}
	cout << sum << "íšŒ";
	

	return 0;
}