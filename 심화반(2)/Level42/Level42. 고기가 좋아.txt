#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int map[4][6];
struct Node {
	int y, x;
};
int used[4][6] = { 0 };
Node q[100];
int direct[4][2] = { -1,0,1,0,0,1,0,-1 };
int head;
int tail;
void init() {
	head = 0;
	tail = 1;
	q[0] = { 0,0 };
	used[0][0] = 1;
}
int cnt = 0;
int main() {
	
	init();
	for (int y = 0; y < 4; y++) {
		for (int x = 0; x < 6; x++) {
			cin >> map[y][x];
		}
	}
	
	while (head != tail) {
		Node now = q[head];
		for (int i = 0; i < 4; i++) {
			int ny = now.y + direct[i][0];
			int nx = now.x + direct[i][1];
			if (ny < 0 || nx < 0 || ny >= 4 || nx >= 6) continue;
			if (map[ny][nx] == 1) continue;
			if (used[ny][nx] == 1) continue;
			used[ny][nx] = 1;
			if (map[ny][nx] == 2) cnt++;
			q[tail++] = { ny, nx };
		}
		head++;
	}
	cout << cnt;
	return 0;
}