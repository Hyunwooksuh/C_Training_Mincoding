#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int map[10][10] = { 0 };
int used[10][10] = { 0 };
struct Node {
	int y, x;
	int level;
};
int direct[4][2] = { -1,0,1,0,0,1,0,-1 };
int head = 0;
int tail = 2;
Node q[100];
int main() {

	Node s1;
	Node s2;
	int n;
	cin >> n;
	cin >> s1.y >> s1.x >> s2.y >> s2.x;
	q[0] = { s1.y, s1.x,1};
	q[1] = { s2.y, s2.x,1 };
	used[s1.y][s1.x] = 1;
	used[s2.y][s2.x] = 1;
	map[s1.y][s1.x] = 1;
	map[s2.y][s2.x] = 1;

	while (head != tail) {
		Node now = q[head];
		for (int i = 0; i < 4; i++) {
			int ny = now.y + direct[i][0];
			int nx = now.x + direct[i][1];
			if (ny < 0 || nx < 0 || ny >= n || nx >= n) continue;
			if (used[ny][nx] == 1) continue;
			used[ny][nx] = 1;
			map[ny][nx] = map[now.y][now.x] + 1;
			q[tail++] = { ny, nx, now.level + 1 };
		}
		head++;
	}

	for (int y = 0; y < n; y++) {
		for (int x = 0; x < n; x++) {
			cout << map[y][x];
		}
		cout << '\n';
	}


	return 0;
}