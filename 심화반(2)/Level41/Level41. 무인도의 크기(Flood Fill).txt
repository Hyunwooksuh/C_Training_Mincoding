#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int map[4][4];
int used[4][4];
struct Node {
	int y, x;
	int level;
};
Node q[50];
int head = 0;
int tail = 1;
int direct[4][2] = { -1,0,1,0,0,1,0,-1 };
int main() {
	
	for (int y = 0; y < 4; y++) {
		for (int x = 0; x < 4; x++) {
			cin >> map[y][x];
		}
	}
	q[0] = { 0,0,1 };
	used[0][0] = 1;
	while (head != tail) {
		Node now = q[head];
		for (int i = 0; i < 4; i++) {
			int ny = now.y + direct[i][0];
			int nx = now.x + direct[i][1];
			if (ny < 0 || nx < 0 || ny >= 4 || nx >= 4) continue;
			if (map[ny][nx] == 0) continue;
			if (used[ny][nx] == 1) continue;
			used[ny][nx] = 1;
			map[ny][nx] = now.level + 1;
			q[tail++] = { ny, nx, now.level + 1 };
		}
		head++;
	}
	cout << tail;

	return 0;
}