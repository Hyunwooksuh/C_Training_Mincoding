#include <iostream>
#include <cstring>
#include <queue>
using namespace std;
int map[50][50];
int used[50][50];
struct Node {
	int y, x;
	int level;
};
Node q[100];
int direct[4][2] = { -1,0,1,0,0,1,0,-1 };
int head = 0;
int tail = 1;

Node start = { 0,4,0 };

int main() {

	int garo;
	int sero;
	cin >> garo >> sero;

	for (int y = 0; y < sero; y++) {
		for (int x = 0; x < garo; x++) {
			cin >> map[y][x];
		}
	}
	cin >> start.y >> start.x;
	q[0] = { start.y,start.x,0 };
	used[start.y][start.x] = 1;

	while (head != tail) {
		Node now = q[head];
		for (int i = 0; i < 4; i++) {
			int ny = now.y + direct[i][0];
			int nx = now.x + direct[i][1];
			if (ny < 0 || nx < 0 || ny >= garo || nx >= sero) continue;
			if (map[ny][nx] == 1) continue;
			if (used[ny][nx] == 1) continue;
			used[ny][nx] = 1;

			map[ny][nx] = map[now.y][now.x] + 1;
			q[tail++] = { ny, nx, now.level + 1 };
		}
		head++;
	}

	int ret = q[tail - 1].level;
	cout << ret;

	return 0;
}